Dado un número positivo, genere una miniespecificación que permita descomponer el número dado en unidades, decenas,
centenas, etc. Ejemplo: 
si el número es 1920 el resultado deberá ser similar a:

0 (0 unidades) 20 (2 unidades) 900 (9 centenas) 1000 (una unidad de millar)

Tomar en consideración lo siguiente:

Se ingresa el número en una variale k
Se guarda el número k en una variable temporal k1
Se empieza un ciclo repetitivo mientras k1 sea mayor a cero
Se calcula el residuo a través de: k1 MOD 10
Se presenta en pantalla lo siguiente en cada iteración: residuo * 10 elevado a la potencia j
j es un contador que debe empezar inicializado en cero antes del iniciar el ciclo funcionará el exponente de posicionamiento de la descomposición
k1 toma un nuevo valor, realizado una división mediante la operación: k1/10 (dara el resultado entero de la división)
Se incrementa el valor de j en uno.
Cuando se ejecuta una prueba de escritorio ma

----------------------------Miniespesificaciones--------------
  
1. Inicio
2. funcion principal()
3.      k, i[0-n]
4.      residuo, i[0-n]
5.      Leer k
6.      residuo <--(k)
7.      Escribir "Inserte un numero "
8.      Escribir procedimiento(residuo, k)
9. fin funcion principal 
10. funcion k(k, i) : i
11.     residuo, i[0-n]
12.     residuo <-- k1 MOD 10
13.     retorna residuo
14. fin funcion k
15. funcion procedimiento(residuo, i; k1, i) : x
16.     cadena, x(200)[{a-z},{A-Z},{0-100},{BS}] <-- ""
17.     j, i[0-n] <-- 0
18.     Mientras(k1 > 0) entonces
19.         residuo <-- k(k1)
20.         cadena <-- cadena + residuo + " * 10 elevado a la potencia " + j + "\n"
21.         j <-- j + 1
22.         k1 <-- k1 / 10
23.     fin Mientras
24.     retorna
25. fin funcion procedimiento
26. fin